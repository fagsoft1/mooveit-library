{"version":3,"file":"index.js","sources":["../src/components/Themes/ThemeContext.tsx","../src/components/Button/Button.tsx","../src/components/InputLabel/InputLabel.tsx","../src/components/InputBase/InputBase.tsx","../src/components/InputText/InputText.tsx","../src/components/InputNumber/InputNumber.tsx","../src/components/SelectInput/SelectInput.tsx","../node_modules/style-inject/dist/style-inject.es.js","../src/components/Autocomplete/Autocomplete.tsx"],"sourcesContent":["import {createContext} from 'react';\n\nexport interface ITheme {\n    palette: {\n        primary: {\n            main: string;\n            contrast: string;\n        };\n        secondary: {\n            main: string;\n            contrast: string;\n        };\n    };\n}\n\nconst themes: ITheme = {\n    palette: {\n        primary: {\n            main: 'green',\n            contrast: 'black',\n        },\n        secondary: {\n            main: 'red',\n            contrast: 'white',\n        },\n    },\n};\n\nconst ThemeContext = createContext(themes);\nexport default ThemeContext;\n","import React, {useContext} from 'react';\nimport ThemeContext from '../Themes/ThemeContext';\n\nimport IButton from './Button.types';\n\nconst Button: React.FC<IButton> = ({text, disabled = false, type = 'button', onClick}: IButton) => {\n    const theme = useContext(ThemeContext);\n    return (\n        <button\n            onClick={onClick}\n            disabled={disabled}\n            type={type} // eslint-disable-line react/button-has-type\n            style={{\n                background: theme.palette.primary.main,\n                color: theme.palette.primary.contrast,\n            }}\n        >\n            {text}\n        </button>\n    );\n};\n// eslint-disable-next-line import/prefer-default-export\nexport default Button;\n","import React, {useContext} from 'react';\nimport IInputLabel from './InputLabel.types';\nimport ThemeContext from '../Themes/ThemeContext';\n\nconst InputLabel: React.FC<IInputLabel> = ({label, name, children}: IInputLabel) => {\n    const theme = useContext(ThemeContext);\n    return (\n        <>\n            <label style={{color: theme.palette.primary.main}} htmlFor={name}>\n                <span>{label} </span>\n            </label>\n            {children}\n        </>\n    );\n};\nexport default InputLabel;\n","import React from 'react';\nimport IInputBase from './InputBase.types';\nimport InputLabel from '../InputLabel/InputLabel';\n\nconst InputBase: React.FC<IInputBase> = ({label, value, name, onKeyUp, onChange}: IInputBase) => {\n    return (\n        <InputLabel label={label} name={name}>\n            <input value={value} onChange={onChange} onKeyUp={onKeyUp} />\n        </InputLabel>\n    );\n};\nexport default InputBase;\n","import React, {useState} from 'react';\nimport InputBase from '../InputBase/InputBase';\nimport IInputText from './InputText.types';\n\nconst InputText: React.FC<IInputText> = (props: IInputText) => {\n    const {value = '', name, label} = props;\n    const [currentValue, setCurrentValue] = useState(value);\n    return (\n        <InputBase\n            name={name}\n            label={label}\n            onChange={(e) => {\n                setCurrentValue(e.target.value);\n            }}\n            value={currentValue}\n        />\n    );\n};\n\nexport default InputText;\n","import React, {useState} from 'react';\nimport InputBase from '../InputBase/InputBase';\n\nimport IInputNumber from './InputNumber.types';\n\nconst InputNumber: React.FC<IInputNumber> = ({name, label, decimalSeparator = '.'}: IInputNumber) => {\n    const [currentValue, setCurrentValue] = useState('');\n    const justNumbers = (text: string) => text.replace(/[^0-9]/g, '');\n    const createMask = (text: string) => {\n        return text.replace(/(\\d)(?=(\\d\\d\\d)+(?!\\d))/g, `$1${decimalSeparator}`);\n    };\n    const destroyMask = (text: string) => {\n        return text.replace(/\\D/g, '').substring(0, 40);\n    };\n    return (\n        <InputBase\n            onChange={(e) => {\n                setCurrentValue(justNumbers(e.target.value));\n            }}\n            onKeyUp={(e) => {\n                setCurrentValue(createMask(destroyMask(e.currentTarget.value)));\n            }}\n            value={currentValue}\n            label={label}\n            name={name}\n        />\n    );\n};\nexport default InputNumber;\n","import React from 'react';\nimport InputLabel from '../InputLabel/InputLabel';\nimport ISelectInput from './SelectInput.types';\n\nconst SelectInput: React.FC<ISelectInput> = ({options, name, label, multiple = false}: ISelectInput) => {\n    return (\n        <InputLabel label={label} name={name}>\n            <select name={name} id={name} multiple={multiple}>\n                {options.map((e) => (\n                    <option key={e.value} value={e.value}>\n                        {e.text}\n                    </option>\n                ))}\n            </select>\n        </InputLabel>\n    );\n};\nexport default SelectInput;\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import React, {useState, useMemo} from 'react';\nimport InputLabel from '../InputLabel/InputLabel';\nimport '../../stylesCCS.css';\n\nimport IAutocomplete from './Autocomplete.types';\n\nconst Autocomplete: React.FC<IAutocomplete> = ({label, name, options}: IAutocomplete) => {\n    const [activeOption, setActiveOption] = useState(0);\n    const [showOptions, setShowOptions] = useState(false);\n    const [userInput, setUserInput] = useState('');\n\n    const onChange = (e: React.FormEvent<HTMLInputElement>) => {\n        setShowOptions(true);\n        setActiveOption(0);\n        setUserInput(e.currentTarget.value);\n    };\n\n    const filteredOptions = useMemo(() => {\n        // to avoid to be recalculated when keyDown event\n        return options.filter((option: string) => option.toLowerCase().indexOf(userInput.toLowerCase()) > -1);\n    }, [userInput]);\n\n    const onKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\n        const activeLimit = filteredOptions.length - 1;\n        switch (e.keyCode) {\n            case 13: // Enter\n                setActiveOption(0);\n                setShowOptions(false);\n                setUserInput(filteredOptions[activeOption]);\n                break;\n            case 38: // ArrowUp\n                if (activeOption === 0) {\n                    return;\n                }\n                setActiveOption(activeOption - 1);\n                break;\n            case 40: // ArrowDown\n                if (activeOption === activeLimit) {\n                    setActiveOption(activeLimit);\n                } else {\n                    setActiveOption(activeOption + 1);\n                }\n                break;\n            default:\n                break;\n        }\n    };\n\n    const onClick = (e: React.MouseEvent<HTMLElement>) => {\n        setActiveOption(0);\n        setShowOptions(false);\n        setUserInput(e.currentTarget.innerText);\n    };\n\n    let optionList = null;\n    if (showOptions && userInput) {\n        if (filteredOptions.length) {\n            optionList = (\n                <ul className=\"options\">\n                    {filteredOptions.map((optionName, index) => {\n                        let className;\n                        if (index === activeOption) {\n                            className = 'option-active';\n                        }\n                        return (\n                            <li role=\"presentation\" className={className} key={optionName} onClick={onClick}>\n                                {optionName}\n                            </li>\n                        );\n                    })}\n                </ul>\n            );\n        } else {\n            optionList = (\n                <div className=\"no-options\">\n                    <em>No Option!</em>\n                </div>\n            );\n        }\n    }\n\n    return (\n        <InputLabel label={label} name={name}>\n            <div>\n                <input type=\"text\" className=\"search-box\" onChange={onChange} onKeyDown={onKeyDown} value={userInput} />\n                {optionList}\n            </div>\n        </InputLabel>\n    );\n};\n\nexport default Autocomplete;\n"],"names":["themes","palette","primary","main","contrast","secondary","ThemeContext","createContext","Button","_a","text","_b","disabled","_c","type","onClick","theme","useContext","React","style","background","color","InputLabel","label","name","children","htmlFor","InputBase","value","onKeyUp","onChange","InputText","props","useState","currentValue","setCurrentValue","e","target","InputNumber","decimalSeparator","replace","currentTarget","substring","SelectInput","options","multiple","id","map","key","styleInject","css","ref","head","insertAt","document","getElementsByTagName","createElement","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","Autocomplete","setActiveOption","setShowOptions","setUserInput","innerText","activeOption","showOptions","_d","userInput","filteredOptions","useMemo","filter","option","toLowerCase","indexOf","optionList","length","className","optionName","index","role","onKeyDown","activeLimit","keyCode"],"mappings":"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"}